tidyr::unite(end_datetime, c("date", "end_time"), remove=FALSE) %>%
readr::type_convert(col_types=cols(
start_datetime=col_datetime(format="%Y/%m/%d_%H:%M"),
max_datetime=col_datetime(format="%Y/%m/%d_%H:%M"),
end_datetime=col_datetime(format="%Y/%m/%d_%H:%M")
)) %>% # parse datetimes
select(-date, -start_time, -max_time, -end_time) # finish up
tidy_top50
url <- "http://www.hcbravo.org/IntroDataSci/misc/waves_type2.html"
html <- read_html(url)
waves_tab <- html %>%
html_node("pre") %>% # DOM node containing data
html_text() %>% # parse as text
stringr::str_split("\\n") %>% # split the lines into a vector
magrittr::extract2(1) %>% # grab the relevant info
stringr::str_subset("^[12]") %>% #
tibble::enframe(value="row_data") %>%
tidyr::separate(row_data, c("start_date", "start_time",
"end_date", "end_time",
"start_frequency", "end_frequency",
"flare_location", "flare_region",
"flare_classification",
"cme_date", "cme_time", "cme_angle", "cme_width", "cme_speed"
), extra="drop", fill="right", sep="\\s+")
waves_tab
tidy_waves <- waves_tab %>%
mutate_all(funs(ifelse(str_detect(., "^[-?]"), NA, .))) %>%
mutate(halo = str_detect(cme_angle, "Halo")) %>%
mutate(cme_angle = ifelse(halo, NA, cme_angle)) %>%
mutate(cme_width_limit = str_detect(cme_width, "^>")) %>%
mutate(cme_width = str_replace_all(cme_width, "[^0-9]", "")) %>%
tidyr::separate(start_date, c("year", "start_date"), sep="/", extra="merge") %>%
tidyr::separate(start_time, c("start_hour", "start_minute"), sep=":") %>%
tidyr::separate(end_time, c("end_hour", "end_minute"), sep=":") %>%
tidyr::separate(cme_time, c("cme_hour", "cme_minute"), sep=":") %>%
mutate_at(vars(ends_with("hour")), funs(str_replace(., "24", "00"))) %>%
tidyr::unite(start_datetime, c("year", "start_date", "start_hour", "start_minute"), sep="/", remove=FALSE) %>%
tidyr::unite(end_datetime, c("year", "end_date", "end_hour", "end_minute"), sep="/", remove=FALSE) %>%
tidyr::unite(cme_datetime, c("year", "cme_date", "cme_hour", "cme_minute"), sep="/") %>%
mutate(cme_datetime=ifelse(str_detect(cme_datetime, "NA"), NA, cme_datetime)) %>%
readr::type_convert(col_types=cols(
start_datetime = col_datetime(format="%Y/%m/%d/%H/%M"),
end_datetime = col_datetime(format="%Y/%m/%d/%H/%M"),
cme_datetime = col_datetime(format="%Y/%m/%d/%H/%M"),
start_frequency = col_integer(),
end_frequency = col_integer(),
cme_width = col_integer()
)) %>%
select(start_datetime, end_datetime, cme_datetime,
start_frequency, end_frequency,
flare_location, flare_region, flare_classification,
cme_angle, cme_speed, halo,
cme_width, cme_width_limit)
tidy_waves
View(tidy_names())
View(tidy_waves)
load("../environment/sce1000/psiMat.RData")
load("../../environment/sce1000/psiMat.RData")
getwd()
setwd("~/cbcbsub00/gbm_giloma/rFilter/")
setwd("..")
load("../environment/sce1000/psiMat.RData")
psiLogitMat <- minfi::logit(psiMat)
psiLogitMat <- minfi::logit2(psiMat)
View(psiLogitMat)
sum(psiLogitMat == Inf)
View(log2(psiMat))
View(psiMat)
sum(psiLogitMat == -Inf)
setwd("~/link1/spring_2020/ta_cmsc320/")
library(tidyverse)
db <- DBI::dbConnect(RSQLite::SQLite(), "data/lahman2016.sqlite")
cut(c(1:20), breaks = 5)
setwd("~/link1/spring_2020/ta_cmsc320/")
library(tidyverse)
db <- DBI::dbConnect(RSQLite::SQLite(), "data/lahman2016.sqlite")
setwd("~/link1/spring_2020/ta_cmsc320/")
library(tidyverse)
db <- DBI::dbConnect(RSQLite::SQLite(), "data/lahman2016.sqlite")
remove(team_tabs)
remove(team_tabs)
remove(team_tab)
setwd("..")
source("scde_help.R")
metaData2 <- read.delim(file = "../SraRunTable.txt", sep = ",", stringsAsFactors = F, row.names = 1)
metaData2 <- cbind(metaData2, dCol = paste(metaData2$plate_id, metaData2$well, sep = "."), stringsAsFactors = FALSE)
load("../environment/sce1000/psiMat.RData")
psiLogitMat <- minfi::logit(psiMat)
psiLogitMat <- minfi::logit2(psiMat)
View(psiLogitMat)
hist(psiLogitMat)
hist(psiMat)
c(100, 200, seq(500, 6000, 500))
rowMeans(psiLogitMat)
rowMeans(psiLogitMat, na.rm = T)
psiLogit <- runSeurat(countData = psiLogitMat, labs = metaData2[cellNames, "cell_type"], scaleFac = 1e6, nFeatures = 1000)
gc()
gc()
?lmFit
?minfi::dmpFinder
minfi::dmpFinder
library(limma)
lmFit()
lmFit
getEAWP
getEAWP
lmFit()
lmFit
getEAWP
seq(5000,15000,1000)
library(limma)
head(tb)
BiocManager::install("clValid")
install.packages("vroom")
getwd()
endsWith('aass')
"aas".endsWith('aass')
?endsWith
endsWith("asdsa", "sa")
knitr::opts_chunk$set(echo = TRUE)
normData <- read.csv(file = "../GBM_data_and_metadata/GBM_normalized_gene_counts.csv", sep = " ", stringsAsFactors = F)
load("../psi/environment/labsImmune.RData")
load("../psi/environment/indsImmune.RData")
load("../environment/sce1000/cellnames_sce1000.RData")
metaData <- read.delim("../SraRunTable.txt", sep = ",", stringsAsFactors = F, row.names = 1)
colnames(normData) <- gsub("^X", "", colnames(normData))
sum(paste(metaData$plate_id, metaData$well, sep = ".") != colnames(normData)) == 0
immColInds <- match(cellNames, rownames(metaData))[indsImmune]
library(dplyr)
immDfBTS2 <- data.frame(microZ = micrZ, macroZ = macroZ, tumLabs = metaData[immColInds, "tissue"],
clustLabs = as.factor(labsImmune))
computeZScore <- function(data, genes = NULL, colInds = NULL, sds = T)
{
if(!is.null(genes))
data <- data[genes,]
Means <- rowMeans(data)
Sds <- sparseMatrixStats::rowSds(data)
zScores <- (data - Means)/Sds
if(!is.null(colInds))
zScores <- zScores[,colInds]
reqList <- list()
reqList[['zScores']] <- zScores
if(sds)
reqList[['Sds']] <- Sds
return(reqList)
}
micrZScore <- computeZScore(normData, genes = microGenes, colInds = immColInds)
microGenes <- c("TMEM119", "P2RY12", "GPR34", "OLFML3", "SLC2A5", "SALL1", "ADORA3")
macroGenes <- c("CRIP1", "S100A8", "S100A9", "ANXA1", "CD14")
computeZScore <- function(data, genes = NULL, colInds = NULL, sds = T)
{
if(!is.null(genes))
data <- data[genes,]
Means <- rowMeans(data)
Sds <- sparseMatrixStats::rowSds(data)
zScores <- (data - Means)/Sds
if(!is.null(colInds))
zScores <- zScores[,colInds]
reqList <- list()
reqList[['zScores']] <- zScores
if(sds)
reqList[['Sds']] <- Sds
return(reqList)
}
micrZScore <- computeZScore(normData, genes = microGenes, colInds = immColInds)
print(micrZScore$Sds)
macroZScore <- computeZScore(normData, genes = macroGenes, colInds = immColInds)
print(macroZScore$Sds)
microZ <- colSums(micrZScore[["zScores"]])
macroZ <- colSums(macroZScore[["zScores"]])
remove(micrZScore, macroZScore)
library(dplyr)
immDfBTS2 <- data.frame(microZ = microZ, macroZ = macroZ, tumLabs = metaData[immColInds, "tissue"],
clustLabs = as.factor(labsImmune))
immDfBTS2 <- immDfBTS2 %>% filter(tumLabs == "Tumor")
immDfBTS2$micrZ > 0.1 & immDfBTS2$macroZ > 0.1
sum(immDfBTS2$micrZ < 1 & immDfBTS2$macroZ > 0)
sum(immDfBTS2$microZ > 0)
sum(immDfBTS2$microZ < 0)
sum(immDfBTS2$microZ < 5)
sum(immDfBTS2$microZ < 2)
sum(immDfBTS2$microZ < 0)
sum(immDfBTS2$microZ < 0 & immDfBTS2$macroZ < 0)
sum(immDfBTS2$microZ < 0 & immDfBTS2$macroZ > 5)
sum(immDfBTS2$microZ < 0 & immDfBTS2$macroZ > 0)
sum(immDfBTS2$microZ < 5 & immDfBTS2$macroZ > 0)
nrow(immDfBTS2)
sum(immDfBTS2$macroZ > 0)
sum(immDfBTS2$macroZ > 2)
sum(immDfBTS2$macroZ > 5)
sum(immDfBTS2$microZ < 5 & immDfBTS2$macroZ > 5)
sum(immDfBTS2$microZ < 5 & immDfBTS2$macroZ > 2)
sum(immDfBTS2$microZ <= 0 & immDfBTS2$macroZ > 2)
sum(immDfBTS2$microZ <= 0 & immDfBTS2$macroZ > 0)
sum(immDfBTS2$microZ <= 5 & immDfBTS2$macroZ > 2)
library(ggplot2)
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ))
p + geom_point()
ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + geom_point() + geom_line()
ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + geom_point() + geom_line(fit = "lm")
ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + geom_point() + geom_line(fit = lm)
ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + geom_point() + stat_smooth(method = "lm")
library(dplyr)
immDfBTS2 <- data.frame(microZ = microZ, macroZ = macroZ, tumLabs = metaData[immColInds, "tissue"],
clustLabs = as.factor(labsImmune))
# immDfBTS2 <- immDfBTS2 %>% filter(tumLabs == "Tumor")
# immDfBTS2$micrZ > 0.1 & immDfBTS2$macroZ > 0.1
# sum(immDfBTS2$micrZ < 1 & immDfBTS2$macroZ > 0)
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~clustLabs) + geom_point() + geom_line()
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~clustLabs) + geom_point() + stat_smooth("lm")
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~clustLabs) + geom_point() + stat_smooth(method = "lm")
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm")
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10,20))
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10,20)) + geom_vline(xintercept = 2.5) +
geom_hline(yintercept = 5)
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10,20)) + geom_vline(xintercept = 2.5) +
geom_hline(yintercept = 0)
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10,20)) + geom_vline(xintercept = 2) +
geom_hline(yintercept = 0)
p
p <- ggplot(immDfBTS2, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10,20)) + geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
p
sum(immDfBTS2$micrZ < 7 & immDfBTS2$macroZ > 0)
sum(immDfBTS2$microZ < 7 & immDfBTS2$macroZ > 0)
sum(immDfBTS2$microZ < 8 & immDfBTS2$macroZ > 0)
178 - sum(immDfBTS2$microZ < 8 & immDfBTS2$macroZ > 0)
178 - sum(immDfBTS2$microZ < 10 & immDfBTS2$macroZ > 0)
178 - sum(immDfBTS2$microZ <= 8 & immDfBTS2$macroZ >= 0)
178 - sum(immDfBTS2$microZ <= 9 & immDfBTS2$macroZ >= 0)
immDfBTS2Tum <- immDfBTS2 %>% filter(tumLabs == "Tumor")
nrow(immDfBTS2Tum)
p <- ggplot(immDfBTS2Tum, aes(x = microZ, y = macroZ)) + facet_grid(~tumLabs) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10, 10)) + geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
p
immDfBTS2Tum$labs <- rep("Micro", nrow(immDfBTS2Tum))
57/178
178 - sum(immDfBTS2$microZ <= 7 & immDfBTS2$macroZ >= 0)
67/178
immDfBTS2Tum$labs[which(immDfBTS2Tum$microZ <= 7 & immDfBTS2Tum$macroZ >= 0)]
ggplot(immDfBTS2Tum, aes(x = microZ, y = macroZ)) + geom_point(color = labs) + stat_smooth(method = "lm") + ylim(c(-10, 10)) + geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
ggplot(immDfBTS2Tum, aes(x = microZ, y = macroZ, color = labs)) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10, 10)) + geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
immDfBTS2Tum$labs[which(immDfBTS2Tum$microZ <= 7 & immDfBTS2Tum$macroZ >= 0)] = "Macro"
ggplot(immDfBTS2Tum, aes(x = microZ, y = macroZ, color = labs)) + geom_point() + stat_smooth(method = "lm") + ylim(c(-10, 10)) + geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
ggplot(immDfBTS2Tum, aes(x = microZ, y = macroZ, color = labs)) + geom_point() + ylim(c(-10, 10)) + geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
sum(immDfBTS2$microZ <= 7 & immDfBTS2$macroZ >= 0)
111/178
knitr::opts_chunk$set(echo = TRUE)
normData <- read.csv(file = "../GBM_data_and_metadata/GBM_normalized_gene_counts.csv", sep = " ", stringsAsFactors = F)
load("../psi/environment/labsImmune.RData")
load("../psi/environment/indsImmune.RData")
load("../environment/sce1000/cellnames_sce1000.RData")
metaData <- read.delim("../SraRunTable.txt", sep = ",", stringsAsFactors = F, row.names = 1)
colnames(normData) <- gsub("^X", "", colnames(normData))
sum(paste(metaData$plate_id, metaData$well, sep = ".") != colnames(normData)) == 0
immColInds <- match(cellNames, rownames(metaData))[indsImmune]
microGenes <- c("TMEM119", "P2RY12", "GPR34", "OLFML3", "SLC2A5", "SALL1", "ADORA3")
macroGenes <- c("CRIP1", "S100A8", "S100A9", "ANXA1", "CD14")
### Z-Scores
```{r}
computeZScore <- function(data, genes = NULL, colInds = NULL, sds = T)
{
if(!is.null(genes))
data <- data[genes,]
Means <- rowMeans(data)
Sds <- sparseMatrixStats::rowSds(data)
zScores <- (data - Means)/Sds
if(!is.null(colInds))
zScores <- zScores[,colInds]
reqList <- list()
reqList[['zScores']] <- zScores
if(sds)
reqList[['Sds']] <- Sds
return(reqList)
}
micrZScore <- computeZScore(normData, genes = microGenes, colInds = immColInds)
print(micrZScore$Sds)
macroZScore <- computeZScore(normData, genes = macroGenes, colInds = immColInds)
print(macroZScore$Sds)
microZ <- colSums(micrZScore[["zScores"]])
macroZ <- colSums(macroZScore[["zScores"]])
remove(micrZScore, macroZScore)
```
### Constructing the data frame
```{r}
library(dplyr)
immDfBTS2 <- data.frame(microZ = microZ, macroZ = macroZ, tumLabs = metaData[immColInds, "tissue"],
clustLabs = as.factor(labsImmune))
```{r}
library(ggplot2)
ggplot(immDfBTS2, aes(x = microZ, y = macroZ, color = labs)) + geom_point() + ylim(c(-2, 10)) geom_vline(xintercept = 7) +
geom_hline(yintercept = 0)
```
ggplot(immDfBTS2, aes(x = microZ, y = macroZ, color = labs)) + geom_point() + ylim(c(-2, 10))
setwd("~/cbcb_rob/noor/data_scripts/segCluster/BTS4/")
setwd("~/cbcb/research_2019/gbm_giloma/")
getwd()
setwd("~/cbcb_rob/noor/data_scripts/segCluster/BTS4/")
View(createExonTypeList)
suppressPackageStartupMessages()\
suppressPackageStartupMessages()
seq(2:10)
c(2:10)
getwd()
library('clusteval')
library(clusteval)
install.packages("clusteval")
setwd("~/cbcb/research_2019/other_data/")
var(c(1,2,3))
var(c(1,2,5))
log2(0) - log2(0)
exp(log2(0) - log2(0))
View(assignSegPairType)
load("cbcb_rob/Uncertainity/simulate.rda")
df
colnames(df)
class(df)
df <- read.csv("~/link1/fall_2020/634/Assignments/assign4/June 10-July 12, 2015 - Gaming, Jobs and Broadband - CSV.csv", sep=",")
View(df)
df$game2a
table(df$game2a, df$auto3)
table(df$auto3)
table(df$game2a)
sum(table(df$game2a))
sum(table(df$auto3))
table(df$game2a, df$auto3)
df$age
df$date4f
table(df$date4f)
df$age
table(df$age)
table(df$age, df$date4f)
hist(df$age)
qqplot(df$age)
qqplot(df$age, rnorm(0,1))
qqplot(df$age, pnorm(0,1))
qqplot(df$age, dnorm(0,1))
qnorm(df$age)
?qqplot
qqnorm(df$age)
table(df$date4f)
df$kidage1
table(df$par)
dfA <- df[,c("game2a", "auto3")]
table(dfA$auto3)
table(dfA$game2a)
table(dfA$game2a, dfA$auto3)
dfA <- dfA %>% filter(game2a >=8 | auto3 >= 8)
library(dplyr)
dfA <- dfA %>% filter(game2a >=8 | auto3 >= 8)
nrow(dfA)
###a
dfA <- df[,c("game2a", "auto3")]
table(dfA$game2a, dfA$auto3)
table(dfA$game2a, dfA$auto3)[4,]
table(dfA$game2a, dfA$auto3)[4:5,]
sum(table(dfA$game2a, dfA$auto3)[4:5,])
sum(table(dfA$game2a, dfA$auto3)[1:3,5:6])
dfA <- dfA %>% filter(game2a <8 | auto3 < 8)
nrow(dfA)
dfA <- df[,c("game2a", "auto3")]
dfA <- dfA %>% filter(game2a <8 && auto3 < 8)
nrow(dfA)
dfA <- df[,c("game2a", "auto3")]
dfA <- dfA %>% filter(game2a <8 & auto3 < 8)
nrow(dfA)
?chisq.test
chisq.test(dfA$game2a, dfA$auto3)
table(dfA$game2a, dfA$auto3)
chisq.test(dfA$auto3, dfA$game2a)
df$kidage1[df$par==0]
df$par
dfB  <- df %>% filter(par %in% c(1,2)) %>% select(par, kidage1, kidage2, kidage3)
View(dfB)
dfB[dfB$par==1,]
sum(is.na(dfB[dfB$par==1,]))
nrow(dfB)
max(dfB)
max(dfB, na.rm = T)
View(dfB[dfB$par==1,])
dfB <- dfB[dfB==9]
View(dfB)
dfB  <- df %>% filter(par %in% c(1,2)) %>% select(par, kidage1, kidage2, kidage3)
View(dfB)
dfB[is.na(dfB)] = 0
dfB in c(8,9)
dfB %in% c(8,9)
table(dfA$game2a)
table(df$game2a)
###b
dfB  <- df %>% filter(par %in% c(1,2), kidage1 %in% c(1:5), kidage2 %in% c(1:5), kidage3 %in% c(1:5), gam2a %in% c(1:3)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
###b
dfB  <- df %>% filter(par %in% c(1,2), kidage1 %in% c(1:5), kidage2 %in% c(1:5), kidage3 %in% c(1:5), game2a %in% c(1:3)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
nrow(dfB)
View(dfB)
###b
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
nrow(dfB)
dfB[is.na(dfB)] = 0
nrow(dfB)
dfB <- filter(kidage1 %in% c(1:5), kidage2 %in% c(1:5), kidage3 %in% c(1:5), game2a %in% c(1:3))
View(dfB)
colnames(dfB)
dfB <- dfB %>% filter(kidage1 %in% c(1:5), kidage2 %in% c(1:5), kidage3 %in% c(1:5), game2a %in% c(1:3))
nrow(dfB)
###b
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(1:5), kidage2 %in% c(1:5), kidage3 %in% c(1:5)) #, game2a %in% c(1:3)
nrow(dfB)
###b
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(1:5)) #, kidage2 %in% c(1:5), kidage3 %in% c(1:5)) #, game2a %in% c(1:3)
nrow(dfB)
###b
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(0:5)) #, kidage2 %in% c(1:5), kidage3 %in% c(1:5)) #, game2a %in% c(1:3)
nrow(dfB)
###b
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(0:5) , kidage2 %in% c(0:5), kidage3 %in% c(0:5), game2a %in% c(1:3))
nrow(dfB)
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(0:5) , kidage2 %in% c(0:5), kidage3 %in% c(0:5))
nrow(dfB)
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(0:5) , kidage2 %in% c(0:5), kidage3 %in% c(0:5), game2a %in% c(1:3))
dfB$nKids <- rowSums(dfB[,c("kidage1", "kidage2", "kidage3")])
View(dfB)
hist(dfB$nKids)
kruskal.test(nKids ~ game2a, data = dfB)
nrow(dfB)
###c
dfC <- df %>% select(date4f, age) %>% filter(age !%in% c(98,99))
###c
dfC <- df %>% select(date4f, age) %>% filter(!age %in% c(98,99))
View(dfC)
sum(dfC$age==98)
sum(dfC$age>=98)
sum(df$age>=98)
dfC <- df %>% select(date4f, age) %>% filter(!age %in% c(98,99), date4f %in% c(1,2))
nrow(dfC)
View(dfC)
table(dfC$date4f)
table(dfC$age)
wilcox.test(dfC$age, dfC$date4f)
chisq.test(dfC$age, dfC$date4f)
a <- chisq.test(dfC$age, dfC$date4f)
a <- wilcox.test(dfC$age, dfC$date4f)
a$statistic
View(dfC)
glm(dfC$date4f~dfC$age)
a <- glm(dfC$date4f~dfC$age)
a$coefficients
a$residuals
nrow(dfC)
wilcox.test(dfC$age, dfC$date4f)
df <- read.delim("~/link1/research/r_2019/brie/GSE113973_series_matrix.txt")
View(df)
df <- read.delim("~/link1/research/r_2019/brie/GSE113973_series_matrix.txt", sep = ",")
View(df)
df[1,]
df[10,]
df[20,]
library(dplyr)
df <- read.csv("~/link1/fall_2020/634/Assignments/assign4/June 10-July 12, 2015 - Gaming, Jobs and Broadband - CSV.csv", sep=",")
###a
dfA <- df[,c("game2a", "auto3")]
dfA <- dfA %>% filter(game2a <8 & auto3 < 8)
chisq.test(dfA$game2a, dfA$auto3)
###b
dfB  <- df %>% filter(par %in% c(1,2)) %>%
select(par, kidage1, kidage2, kidage3,game2a)
dfB[is.na(dfB)] = 0
dfB <- dfB %>% filter(kidage1 %in% c(0:5) , kidage2 %in% c(0:5), kidage3 %in% c(0:5), game2a %in% c(1:3))
dfB$nKids <- rowSums(dfB[,c("kidage1", "kidage2", "kidage3")])
dfC <- df %>% select(date4f, age) %>% filter(!age %in% c(98,99), date4f %in% c(1,2))
wilcox.test(dfC$age, dfC$date4f)
kruskal.test(nKids ~ game2a, data = dfB)
dfB$game2a
table(dfB$game2a)
?kruskal.test
dfB$game2a <- as.factor(dfB$game2a)
kruskal.test(nKids ~ game2a, data = dfB)
dfB$nKids
kruskal.test(game2a ~ nKids, data = dfB)
kruskal.test(nKids ~ game2a, data = dfB)
setwd("~/cbcb_rob/Uncertainity/boot_gibbs/R/seqc/")
